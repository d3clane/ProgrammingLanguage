(NEW_FUNC (NEW_FUNC (NEW_FUNC (TYPE (TYPE_INT nil nil )(FUNC (GetNumberOfRoots (COMMA (COMMA (TYPE (TYPE_INT nil nil )(a nil nil ))(TYPE (TYPE_INT nil nil )(b nil nil )))(TYPE (TYPE_INT nil nil )(c nil nil )))(LINE_END (IF (EQ (a nil nil )(0 nil nil ))(LINE_END (IF (EQ (b nil nil )(0 nil nil ))(LINE_END (IF (NOT_EQ (c nil nil )(0 nil nil ))(LINE_END (RETURN (0 nil nil )nil )nil ))(LINE_END (IF (EQ (c nil nil )(0 nil nil ))(LINE_END (RETURN (3 nil nil )nil )nil ))nil )))(LINE_END (IF (NOT_EQ (b nil nil )(0 nil nil ))(LINE_END (RETURN (1 nil nil )nil )nil ))nil )))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (D nil nil )(SUB (MUL (b nil nil )(b nil nil ))(MUL (MUL (4 nil nil )(a nil nil ))(c nil nil )))))(LINE_END (IF (EQ (D nil nil )(0 nil nil ))(LINE_END (RETURN (1 nil nil )nil )nil ))(LINE_END (IF (LESS (D nil nil )(0 nil nil ))(LINE_END (RETURN (0 nil nil )nil )nil ))(LINE_END (RETURN (SUB (2 nil nil )(0 nil nil ))nil )nil ))))))nil ))(TYPE (TYPE_INT nil nil )(FUNC (GetFirstRoot (COMMA (COMMA (TYPE (TYPE_INT nil nil )(a nil nil ))(TYPE (TYPE_INT nil nil )(b nil nil )))(TYPE (TYPE_INT nil nil )(c nil nil )))(LINE_END (IF (EQ (a nil nil )(0 nil nil ))(LINE_END (RETURN (SUB (0 nil nil )(DIV (c nil nil )(b nil nil )))nil )nil ))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (D nil nil )(SUB (MUL (b nil nil )(b nil nil ))(MUL (MUL (4 nil nil )(a nil nil ))(c nil nil )))))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (sqrtD nil nil )(SQRT (D nil nil )nil )))(LINE_END (RETURN (DIV (DIV (SUB (SUB (0 nil nil )(b nil nil ))(sqrtD nil nil ))(2 nil nil ))(a nil nil ))nil )nil )))))nil )))(TYPE (TYPE_INT nil nil )(FUNC (GetSecondRoot (COMMA (COMMA (TYPE (TYPE_INT nil nil )(a nil nil ))(TYPE (TYPE_INT nil nil )(b nil nil )))(TYPE (TYPE_INT nil nil )(c nil nil )))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (D nil nil )(SUB (MUL (b nil nil )(b nil nil ))(MUL (MUL (4 nil nil )(a nil nil ))(c nil nil )))))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (sqrtD nil nil )(SQRT (D nil nil )nil )))(LINE_END (RETURN (DIV (DIV (ADD (SUB (0 nil nil )(b nil nil ))(sqrtD nil nil ))(2 nil nil ))(a nil nil ))nil )nil ))))nil )))(TYPE (TYPE_INT nil nil )(FUNC (main nil (LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (a nil nil )(READ nil nil )))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (b nil nil )(READ nil nil )))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (c nil nil )(READ nil nil )))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (numberOfRoot nil nil )(FUNC_CALL (GetNumberOfRoots (COMMA (COMMA (a nil nil )(b nil nil ))(c nil nil ))nil )nil )))(LINE_END (IF (EQ (numberOfRoot nil nil )(3 nil nil ))(LINE_END (RETURN (0 nil nil )nil )nil ))(LINE_END (PRINT (numberOfRoot nil nil )nil )(LINE_END (IF (GREATER_EQ (numberOfRoot nil nil )(1 nil nil ))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (firstRoot nil nil )(FUNC_CALL (GetFirstRoot (COMMA (COMMA (a nil nil )(b nil nil ))(c nil nil ))nil )nil )))(LINE_END (PRINT (firstRoot nil nil )nil )nil )))(LINE_END (IF (GREATER_EQ (numberOfRoot nil nil )(2 nil nil ))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (secondRoot nil nil )(FUNC_CALL (GetSecondRoot (COMMA (COMMA (a nil nil )(b nil nil ))(c nil nil ))nil )nil )))(LINE_END (PRINT (secondRoot nil nil )nil )nil )))nil )))))))))nil )))
