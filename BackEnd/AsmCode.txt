jmp main:

HasSolution: 
    pop [0]
    pop [1]
    pop [2]

    push [0]
    push 0
    je EQ_0:
    push 0
    jmp AFTER_EQ_0:
    EQ_0:
    push 1
    AFTER_EQ_0:

    push 0
    je end_if_1:

        push [1]
        push 0
        je EQ_2:
        push 0
        jmp AFTER_EQ_2:
        EQ_2:
        push 1
        AFTER_EQ_2:

        push 0
        je end_if_3:

            push [2]
            push 0
            jne NOT_EQ_4:
            push 0
            jmp AFTER_NOT_EQ_4:
            NOT_EQ_4:
            push 1
            AFTER_NOT_EQ_4:

            push 0
            je end_if_5:
                push 0
                ret
            end_if_5:

        end_if_3:

    end_if_1:

    push 1
    push 0
    sub
    ret

SolveLinearEquation: 
    pop [3]
    pop [4]
    push 0
    push [4]
    push [3]
    div
    sub
    ret

SolveQuadraticEquation: 
    pop [5]
    pop [6]
    pop [7]

    push [5]
    push 0
    je EQ_6:
    push 0
    jmp AFTER_EQ_6:
    EQ_6:
    push 1
    AFTER_EQ_6:

    push 0
    je end_if_7:
        push [7]
        push [6]
        call SolveLinearEquation:
        ret
    end_if_7:

    push [6]
    push [6]
    mul
    push 4
    push [5]
    mul
    push [7]
    mul
    sub
    pop [8]

    push [8]
    push 0
    jbe LESS_EQ_8:
    push 0
    jmp AFTER_LESS_EQ_8:
    LESS_EQ_8:
    push 1
    AFTER_LESS_EQ_8:

    push 0
    je end_if_9:
        push 0
        push 1337
        sub
        ret
    end_if_9:

    push [8]
    sqrt
    pop [9]
    push [9]
    push 2
    div
    push [5]
    div
    push [6]
    push 2
    div
    push [5]
    div
    sub
    pop [10]
    push 0
    push [9]
    push 2
    div
    push [5]
    div
    sub
    push [6]
    push 2
    div
    push [5]
    div
    sub
    pop [11]
    push [10]
    out
    pop
    push [11]
    out
    pop
    push 0
    ret

main: 
    in
    pop [12]
    in
    pop [13]
    in
    pop [14]
    push [14]
    push [13]
    push [12]
    call SolveQuadraticEquation:
    ret
    hlt
