(NEW_FUNC (NEW_FUNC (NEW_FUNC (TYPE (TYPE_INT nil nil )(FUNC (HasSolution (COMMA (COMMA (TYPE (TYPE_INT nil nil )(a nil nil ))(TYPE (TYPE_INT nil nil )(b nil nil )))(TYPE (TYPE_INT nil nil )(c nil nil )))(LINE_END (IF (EQ (a nil nil )(0 nil nil ))(LINE_END (IF (EQ (b nil nil )(0 nil nil ))(LINE_END (IF (NOT_EQ (c nil nil )(0 nil nil ))(LINE_END (RETURN (0 nil nil )nil )nil ))nil ))nil ))(LINE_END (RETURN (SUB (1 nil nil )(0 nil nil ))nil )nil )))nil ))(TYPE (TYPE_INT nil nil )(FUNC (SolveLinearEquation (COMMA (TYPE (TYPE_INT nil nil )(a nil nil ))(TYPE (TYPE_INT nil nil )(b nil nil )))(LINE_END (RETURN (SUB (0 nil nil )(DIV (b nil nil )(a nil nil )))nil )nil ))nil )))(TYPE (TYPE_INT nil nil )(FUNC (SolveQuadraticEquation (COMMA (COMMA (TYPE (TYPE_INT nil nil )(a nil nil ))(TYPE (TYPE_INT nil nil )(b nil nil )))(TYPE (TYPE_INT nil nil )(c nil nil )))(LINE_END (IF (EQ (a nil nil )(0 nil nil ))(LINE_END (RETURN (FUNC_CALL (SolveLinearEquation (COMMA (b nil nil )(c nil nil ))nil )nil )nil )nil ))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (D nil nil )(SUB (MUL (b nil nil )(b nil nil ))(MUL (MUL (4 nil nil )(a nil nil ))(c nil nil )))))(LINE_END (IF (LESS_EQ (D nil nil )(0 nil nil ))(LINE_END (RETURN (SUB (0 nil nil )(1337 nil nil ))nil )nil ))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (sqrtD nil nil )(SQRT (D nil nil )nil )))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (res1 nil nil )(SUB (DIV (DIV (sqrtD nil nil )(2 nil nil ))(a nil nil ))(DIV (DIV (b nil nil )(2 nil nil ))(a nil nil )))))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (res2 nil nil )(SUB (SUB (0 nil nil )(DIV (DIV (sqrtD nil nil )(2 nil nil ))(a nil nil )))(DIV (DIV (b nil nil )(2 nil nil ))(a nil nil )))))(LINE_END (PRINT (res1 nil nil )nil )(LINE_END (PRINT (res2 nil nil )nil )(LINE_END (RETURN (0 nil nil )nil )nil ))))))))))nil )))(TYPE (TYPE_INT nil nil )(FUNC (main nil (LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (a nil nil )(READ nil nil )))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (b nil nil )(READ nil nil )))(LINE_END (TYPE (TYPE_INT nil nil )(ASSIGN (c nil nil )(READ nil nil )))(LINE_END (RETURN (FUNC_CALL (SolveQuadraticEquation (COMMA (COMMA (a nil nil )(b nil nil ))(c nil nil ))nil )nil )nil )nil )))))nil )))
